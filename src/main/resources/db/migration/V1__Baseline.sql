CREATE TABLE users
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    name    VARCHAR(255) UNIQUE NOT NULL ,
    email    VARCHAR(255) UNIQUE NOT NULL ,
    role    VARCHAR(255) NOT NULL ,
    hashed_password    VARCHAR(255),
    created_at TIMESTAMP with time zone NOT NULL,

    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE profiles
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    description VARCHAR(255),
    CONSTRAINT pk_profile PRIMARY KEY (id)

);

create TABLE follows
(
    id                    BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    created_at            TIMESTAMP with time zone                NOT NULL,
    fk_follower_user      BIGINT,
    fk_followee_user      BIGINT,
    notifications_enabled BOOLEAN,

    CONSTRAINT pk_follows PRIMARY KEY (id),
    CONSTRAINT fk_follower_user FOREIGN KEY (fk_follower_user) REFERENCES users (id),
    CONSTRAINT fk_followee_user FOREIGN KEY (fk_followee_user) REFERENCES users (id)
);

CREATE TABLE characters
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    name VARCHAR(255),
    gender VARCHAR(255),
    age SMALLINT,
    birthday VARCHAR(255),
    first_seen VARCHAR(255),
    status VARCHAR(255),
    body TEXT NOT NULL,
    created_at TIMESTAMP with time zone NOT NULL,
    updated_at TIMESTAMP with time zone NOT NULL,
    author_id BIGINT NOT NULL,

    CONSTRAINT pk_characters PRIMARY KEY (id),
    CONSTRAINT fk_author_id FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE location_data
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    name VARCHAR(255),

    CONSTRAINT pk_location_data PRIMARY KEY (id)
);


CREATE TABLE timelines
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    name    VARCHAR(255) NOT NULL ,
    description VARCHAR(255) NOT NULL,
    author_id BIGINT NOT NULL,


    CONSTRAINT pk_timelines PRIMARY KEY (id),
    CONSTRAINT fk_author_id FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT uc_timelines_name UNIQUE (name)
);


CREATE TABLE articles
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    title    VARCHAR(255),
    body    TEXT NOT NULL,
    created_at TIMESTAMP with time zone NOT NULL,
    updated_at TIMESTAMP with time zone NOT NULL,
    author_id BIGINT NOT NULL,

    CONSTRAINT pk_articles PRIMARY KEY (id),
    CONSTRAINT fk_author_id FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE
);

CREATE TABLE articles_to_characters
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    article_id BIGINT NOT NULL,
    character_id BIGINT NOT NULL,

    CONSTRAINT pk_articles_to_characters PRIMARY KEY (id),
    CONSTRAINT uc_articles_to_characters UNIQUE (article_id, character_id),
    CONSTRAINT fk_article_id FOREIGN KEY (article_id) REFERENCES articles (id) ON DELETE CASCADE,
    CONSTRAINT fk_character_id FOREIGN KEY (character_id) REFERENCES characters (id) ON DELETE CASCADE
);

-- Ensure that if article has a timeline Id, the index must NOT be null.
-- Also articles to timelines is many:1.
CREATE TABLE timeline_entries
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    timeline_id BIGINT NOT NULL,
    article_id BIGINT NOT NULL,
    timeline_index BIGINT NOT NULL,

    CONSTRAINT pk_timeline_entries PRIMARY KEY (id),
    CONSTRAINT fk_timeline_id FOREIGN KEY (timeline_id) REFERENCES timelines (id) ON DELETE CASCADE,
    CONSTRAINT fk_article_id FOREIGN KEY (article_id) REFERENCES articles (id) ON DELETE CASCADE,
    CONSTRAINT uc_timeline_id_index UNIQUE (timeline_id, timeline_index, article_id),
    CONSTRAINT uc_timeline_index UNIQUE (timeline_id, timeline_index) DEFERRABLE INITIALLY DEFERRED
);

CREATE TABLE comments
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    author_id BIGINT NOT NULL,
    body    TEXT NOT NULL,
    owning_article_id BIGINT NOT NULL,
    created_at TIMESTAMP with time zone NOT NULL,
    updated_at TIMESTAMP with time zone NOT NULL,

    CONSTRAINT pk_comments PRIMARY KEY (id),
    CONSTRAINT fk_author_id FOREIGN KEY (author_id) REFERENCES users (id),
    CONSTRAINT fk_owning_article_id FOREIGN KEY (owning_article_id) REFERENCES articles (id)
);

CREATE TABLE comment_replies
(
    reply_to_id BIGINT NOT NULL,
    reply_id BIGINT NOT NULL,

    CONSTRAINT pk_comment_replies PRIMARY KEY (reply_id, reply_to_id),
    CONSTRAINT fk_reply_to_id FOREIGN KEY (reply_to_id) REFERENCES comments (id),
    CONSTRAINT fk_reply_id FOREIGN KEY (reply_id) REFERENCES comments (id),
    CONSTRAINT uc_comment_replies UNIQUE (reply_id, reply_to_id)
);

CREATE TABLE tags
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    name    VARCHAR(255) NOT NULL ,

    CONSTRAINT pk_tags PRIMARY KEY (id),
    CONSTRAINT uc_name UNIQUE (name)
);

CREATE TABLE tags_to_articles
(
    tag_id BIGINT NOT NULL,
    article_id BIGINT NOT NULL,

    CONSTRAINT pk_tags_to_articles PRIMARY KEY (tag_id, article_id),
    CONSTRAINT fk_tag_id FOREIGN KEY (tag_id) REFERENCES tags (id),
    CONSTRAINT fk_article_id FOREIGN KEY (article_id) REFERENCES articles (id),
    CONSTRAINT uc_tags_to_articles UNIQUE (tag_id, article_id)


);

CREATE TABLE files
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL ,
    created_at TIMESTAMP with time zone NOT NULL,
    updated_at TIMESTAMP with time zone NOT NULL,
    author_id BIGINT,
    owning_article_id BIGINT,
    owning_character_id BIGINT,
    name VARCHAR(255),

    CONSTRAINT pk_files PRIMARY KEY (id),
    CONSTRAINT fk_author_id FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE,
    CONSTRAINT fk_owning_article_id FOREIGN KEY (owning_article_id) REFERENCES articles (id) ON DELETE CASCADE,
    CONSTRAINT fk_owning_character_id FOREIGN KEY (owning_character_id) REFERENCES characters (id) ON DELETE CASCADE
);

CREATE TABLE article_reactions
(
    emoji VARCHAR(255) NOT NULL,
    author_id BIGINT,

    CONSTRAINT fk_author_id FOREIGN KEY (author_id) REFERENCES users (id),
    CONSTRAINT fk_article_id FOREIGN KEY (author_id) REFERENCES articles (id)
);